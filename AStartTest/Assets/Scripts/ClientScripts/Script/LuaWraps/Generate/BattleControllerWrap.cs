//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class BattleControllerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(BattleController), typeof(Singleton<BattleController>));
		L.RegFunction("SetGamePaused", SetGamePaused);
		L.RegFunction("IsGamePaused", IsGamePaused);
		L.RegFunction("StartBattle", StartBattle);
		L.RegFunction("LoadScene", LoadScene);
		L.RegFunction("UnLoadScene", UnLoadScene);
		L.RegFunction("WorldToCell", WorldToCell);
		L.RegFunction("CellToWorld", CellToWorld);
		L.RegFunction("ScreenToWorld", ScreenToWorld);
		L.RegFunction("ScreenToCell", ScreenToCell);
		L.RegFunction("AddCard", AddCard);
		L.RegFunction("CreateActor", CreateActor);
		L.RegFunction("CreateDummyActor", CreateDummyActor);
		L.RegFunction("CreateProjectile", CreateProjectile);
		L.RegFunction("CreateTower", CreateTower);
		L.RegFunction("GetActorList", GetActorList);
		L.RegFunction("FindTarget", FindTarget);
		L.RegFunction("FindTargets", FindTargets);
		L.RegFunction("FindTower", FindTower);
		L.RegFunction("ShowCursorModel", ShowCursorModel);
		L.RegFunction("HideCursorModel", HideCursorModel);
		L.RegFunction("ClearCursorModel", ClearCursorModel);
		L.RegFunction("SetCursorModelPosition", SetCursorModelPosition);
		L.RegFunction("UseCard", UseCard);
		L.RegFunction("OnUseCardOK", OnUseCardOK);
		L.RegFunction("OnEnemyUseCard", OnEnemyUseCard);
		L.RegFunction("OnStartBattle", OnStartBattle);
		L.RegFunction("OnFinishBattle", OnFinishBattle);
		L.RegFunction("GetCard", GetCard);
		L.RegFunction("RandomCard", RandomCard);
		L.RegFunction("PushNewCard", PushNewCard);
		L.RegFunction("GenerateCard", GenerateCard);
		L.RegFunction("FixCell", FixCell);
		L.RegFunction("CreateParticle", CreateParticle);
		L.RegFunction("ConnectToBattleServer", ConnectToBattleServer);
		L.RegFunction("RegisterMsg", RegisterMsg);
		L.RegFunction("ReqConnect", ReqConnect);
		L.RegFunction("ReqBattle", ReqBattle);
		L.RegFunction("ReqLogin", ReqLogin);
		L.RegFunction("ReqAddBot", ReqAddBot);
		L.RegFunction("ReqSynAction", ReqSynAction);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", Lua_ToString);
		L.RegVar("BattleSpeed", get_BattleSpeed, set_BattleSpeed);
		L.RegVar("ServerTurnIndex", get_ServerTurnIndex, set_ServerTurnIndex);
		L.RegVar("ServerTimestamp", get_ServerTimestamp, set_ServerTimestamp);
		L.RegVar("ClientTurnIndex", get_ClientTurnIndex, set_ClientTurnIndex);
		L.RegVar("Mana", get_Mana, set_Mana);
		L.RegVar("UserID", get_UserID, set_UserID);
		L.RegVar("UserLevel", get_UserLevel, set_UserLevel);
		L.RegVar("EnemyUserID", get_EnemyUserID, set_EnemyUserID);
		L.RegVar("EnemyUserLevel", get_EnemyUserLevel, set_EnemyUserLevel);
		L.RegVar("IsHomeCourt", get_IsHomeCourt, set_IsHomeCourt);
		L.RegVar("Token", get_Token, set_Token);
		L.RegVar("ServerIP", get_ServerIP, set_ServerIP);
		L.RegVar("PreviewCard", get_PreviewCard, set_PreviewCard);
		L.RegVar("SelectedCard", get_SelectedCard, set_SelectedCard);
		L.RegVar("CardList", get_CardList, set_CardList);
		L.RegVar("HandCardList", get_HandCardList, set_HandCardList);
		L.RegVar("DeckCardList", get_DeckCardList, set_DeckCardList);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetGamePaused(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetGamePaused(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsGamePaused(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			bool o = obj.IsGamePaused();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartBattle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			BattleType arg1 = (BattleType)ToLua.CheckObject(L, 3, typeof(BattleType));
			obj.StartBattle(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadScene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			string arg0 = ToLua.CheckString(L, 2);
			System.Collections.IEnumerator o = obj.LoadScene(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnLoadScene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			obj.UnLoadScene();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WorldToCell(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.Vector3 o = obj.WorldToCell(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CellToWorld(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			UnityEngine.Vector3 o = obj.CellToWorld(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ScreenToWorld(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			UnityEngine.Vector3 o = obj.ScreenToWorld(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ScreenToCell(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			UnityEngine.Vector2 o = obj.ScreenToCell(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddCard(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			obj.AddCard(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateActor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			long arg2 = (long)LuaDLL.luaL_checknumber(L, 4);
			UnityEngine.Vector3 arg3 = ToLua.ToVector3(L, 5);
			Actor o = obj.CreateActor(arg0, arg1, arg2, arg3);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateDummyActor(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			long arg0 = (long)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			Actor o = obj.CreateDummyActor(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateProjectile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			string arg0 = ToLua.CheckString(L, 2);
			Projectile o = obj.CreateProjectile(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateTower(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			long arg3 = (long)LuaDLL.luaL_checknumber(L, 5);
			Actor o = obj.CreateTower(arg0, arg1, arg2, arg3);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetActorList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			System.Collections.Generic.List<Actor> o = obj.GetActorList();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindTarget(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			long arg0 = (long)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			TeamFlag arg3 = (TeamFlag)ToLua.CheckObject(L, 5, typeof(TeamFlag));
			TargetFlag arg4 = (TargetFlag)ToLua.CheckObject(L, 6, typeof(TargetFlag));
			FindType arg5 = (FindType)ToLua.CheckObject(L, 7, typeof(FindType));
			Actor o = obj.FindTarget(arg0, arg1, arg2, arg3, arg4, arg5);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindTargets(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			long arg0 = (long)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			TeamFlag arg3 = (TeamFlag)ToLua.CheckObject(L, 5, typeof(TeamFlag));
			TargetFlag arg4 = (TargetFlag)ToLua.CheckObject(L, 6, typeof(TargetFlag));
			Actor[] o = obj.FindTargets(arg0, arg1, arg2, arg3, arg4);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindTower(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			long arg0 = (long)LuaDLL.luaL_checknumber(L, 2);
			UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
			Actor o = obj.FindTower(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowCursorModel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.ShowCursorModel(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HideCursorModel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			obj.HideCursorModel();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearCursorModel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			obj.ClearCursorModel();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCursorModelPosition(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.SetCursorModelPosition(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UseCard(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.UseCard(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUseCardOK(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			UnityEngine.Vector2 arg2 = ToLua.ToVector2(L, 4);
			obj.OnUseCardOK(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnemyUseCard(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			UnityEngine.Vector2 arg2 = ToLua.ToVector2(L, 4);
			obj.OnEnemyUseCard(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnStartBattle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			message.S2C_StartBattle arg0 = (message.S2C_StartBattle)ToLua.CheckObject(L, 2, typeof(message.S2C_StartBattle));
			obj.OnStartBattle(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnFinishBattle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			obj.OnFinishBattle();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCard(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			CardInfo o = obj.GetCard(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RandomCard(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			CardInfo o = obj.RandomCard();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PushNewCard(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			CardInfo arg1 = (CardInfo)ToLua.CheckObject(L, 3, typeof(CardInfo));
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			obj.PushNewCard(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GenerateCard(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			obj.GenerateCard();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FixCell(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			UnityEngine.Vector2 o = obj.FixCell(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateParticle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			string arg0 = ToLua.CheckString(L, 2);
			AttachType arg1 = (AttachType)ToLua.CheckObject(L, 3, typeof(AttachType));
			UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
			obj.CreateParticle(arg0, arg1, arg2, arg3, arg4);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ConnectToBattleServer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			obj.ConnectToBattleServer();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RegisterMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			obj.RegisterMsg();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReqConnect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			obj.ReqConnect();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReqBattle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			obj.ReqBattle();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReqLogin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			obj.ReqLogin();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReqAddBot(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			obj.ReqAddBot();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ReqSynAction(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			BattleController obj = (BattleController)ToLua.CheckObject(L, 1, typeof(BattleController));
			message.BattleAction arg0 = (message.BattleAction)ToLua.CheckObject(L, 2, typeof(message.BattleAction));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 3);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			UnityEngine.Vector2 arg3 = ToLua.ToVector2(L, 5);
			obj.ReqSynAction(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Lua_ToString(IntPtr L)
	{
		object obj = ToLua.ToObject(L, 1);

		if (obj != null)
		{
			LuaDLL.lua_pushstring(L, obj.ToString());
		}
		else
		{
			LuaDLL.lua_pushnil(L);
		}

		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BattleSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int ret = obj.BattleSpeed;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BattleSpeed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerTurnIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int ret = obj.ServerTurnIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ServerTurnIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerTimestamp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int ret = obj.ServerTimestamp;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ServerTimestamp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ClientTurnIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int ret = obj.ClientTurnIndex;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ClientTurnIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Mana(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int ret = obj.Mana;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Mana on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UserID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			long ret = obj.UserID;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UserID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UserLevel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int ret = obj.UserLevel;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UserLevel on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EnemyUserID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			long ret = obj.EnemyUserID;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EnemyUserID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EnemyUserLevel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int ret = obj.EnemyUserLevel;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EnemyUserLevel on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsHomeCourt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			bool ret = obj.IsHomeCourt;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsHomeCourt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Token(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			string ret = obj.Token;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Token on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ServerIP(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			string ret = obj.ServerIP;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ServerIP on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PreviewCard(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			CardInfo ret = obj.PreviewCard;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PreviewCard on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SelectedCard(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			CardInfo ret = obj.SelectedCard;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SelectedCard on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CardList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			System.Collections.Generic.List<CardInfo> ret = obj.CardList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CardList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HandCardList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			System.Collections.Generic.List<CardInfo> ret = obj.HandCardList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HandCardList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DeckCardList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			System.Collections.Generic.List<CardInfo> ret = obj.DeckCardList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index DeckCardList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BattleSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.BattleSpeed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index BattleSpeed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ServerTurnIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ServerTurnIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ServerTurnIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ServerTimestamp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ServerTimestamp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ServerTimestamp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ClientTurnIndex(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ClientTurnIndex = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ClientTurnIndex on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Mana(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Mana = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Mana on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UserID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			long arg0 = (long)LuaDLL.luaL_checknumber(L, 2);
			obj.UserID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UserID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UserLevel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.UserLevel = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index UserLevel on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EnemyUserID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			long arg0 = (long)LuaDLL.luaL_checknumber(L, 2);
			obj.EnemyUserID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EnemyUserID on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EnemyUserLevel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.EnemyUserLevel = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EnemyUserLevel on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_IsHomeCourt(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.IsHomeCourt = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsHomeCourt on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Token(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.Token = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Token on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ServerIP(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.ServerIP = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ServerIP on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PreviewCard(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			CardInfo arg0 = (CardInfo)ToLua.CheckObject(L, 2, typeof(CardInfo));
			obj.PreviewCard = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PreviewCard on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SelectedCard(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			CardInfo arg0 = (CardInfo)ToLua.CheckObject(L, 2, typeof(CardInfo));
			obj.SelectedCard = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index SelectedCard on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_CardList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			System.Collections.Generic.List<CardInfo> arg0 = (System.Collections.Generic.List<CardInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<CardInfo>));
			obj.CardList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index CardList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_HandCardList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			System.Collections.Generic.List<CardInfo> arg0 = (System.Collections.Generic.List<CardInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<CardInfo>));
			obj.HandCardList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index HandCardList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DeckCardList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			BattleController obj = (BattleController)o;
			System.Collections.Generic.List<CardInfo> arg0 = (System.Collections.Generic.List<CardInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<CardInfo>));
			obj.DeckCardList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index DeckCardList on a nil value" : e.Message);
		}
	}
}

