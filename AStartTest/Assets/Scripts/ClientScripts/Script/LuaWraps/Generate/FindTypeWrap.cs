//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FindTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(FindType));
		L.RegVar("FIND_ANY", get_FIND_ANY, null);
		L.RegVar("FIND_CLOSEST", get_FIND_CLOSEST, null);
		L.RegVar("FIND_FARTHEST", get_FIND_FARTHEST, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FIND_ANY(IntPtr L)
	{
		ToLua.Push(L, FindType.FIND_ANY);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FIND_CLOSEST(IntPtr L)
	{
		ToLua.Push(L, FindType.FIND_CLOSEST);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FIND_FARTHEST(IntPtr L)
	{
		ToLua.Push(L, FindType.FIND_FARTHEST);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		FindType o = (FindType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

