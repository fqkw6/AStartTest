//this source code was auto-generated by tolua#, do not modify it
using System;
using System.Collections.Generic;
using LuaInterface;

public static class DelegateFactory
{
	public delegate Delegate DelegateValue(LuaFunction func);
	public static Dictionary<Type, DelegateValue> dict = new Dictionary<Type, DelegateValue>();

	static DelegateFactory()
	{
		Register();
	}

	[NoToLuaAttribute]
	public static void Register()
	{
		dict.Clear();
		dict.Add(typeof(System.Action), System_Action);
		dict.Add(typeof(UnityEngine.Events.UnityAction), UnityEngine_Events_UnityAction);
		dict.Add(typeof(TestEventListener.OnClick), TestEventListener_OnClick);
		dict.Add(typeof(TestEventListener.VoidDelegate), TestEventListener_VoidDelegate);
		dict.Add(typeof(System.Action<Actor>), System_Action_Actor);
		dict.Add(typeof(TimerController.TimerHandler), TimerController_TimerHandler);
		dict.Add(typeof(System.Action<Skill>), System_Action_Skill);
		dict.Add(typeof(System.Action<Projectile>), System_Action_Projectile);
	}

    [NoToLuaAttribute]
    public static Delegate CreateDelegate(Type t, LuaFunction func = null)
    {
        DelegateValue create = null;

        if (!dict.TryGetValue(t, out create))
        {
            throw new LuaException(string.Format("Delegate {0} not register", LuaMisc.GetTypeName(t)));            
        }
        
        return create(func);        
    }

    [NoToLuaAttribute]
    public static Delegate RemoveDelegate(Delegate obj, LuaFunction func)
    {
        LuaState state = func.GetLuaState();
        Delegate[] ds = obj.GetInvocationList();

        for (int i = 0; i < ds.Length; i++)
        {
            LuaDelegate ld = ds[i].Target as LuaDelegate;

            if (ld != null && ld.func == func)
            {
                obj = Delegate.Remove(obj, ds[i]);
                state.DelayDispose(ld.func);
                break;
            }
        }

        return obj;
    }

	class System_Action_Event : LuaDelegate
	{
		public System_Action_Event(LuaFunction func) : base(func) { }

		public void Call()
		{
			func.Call();
		}
	}

	public static Delegate System_Action(LuaFunction func)
	{
		if (func == null)
		{
			System.Action fn = delegate { };
			return fn;
		}

		System.Action d = (new System_Action_Event(func)).Call;
		return d;
	}

	class UnityEngine_Events_UnityAction_Event : LuaDelegate
	{
		public UnityEngine_Events_UnityAction_Event(LuaFunction func) : base(func) { }

		public void Call()
		{
			func.Call();
		}
	}

	public static Delegate UnityEngine_Events_UnityAction(LuaFunction func)
	{
		if (func == null)
		{
			UnityEngine.Events.UnityAction fn = delegate { };
			return fn;
		}

		UnityEngine.Events.UnityAction d = (new UnityEngine_Events_UnityAction_Event(func)).Call;
		return d;
	}

	class TestEventListener_OnClick_Event : LuaDelegate
	{
		public TestEventListener_OnClick_Event(LuaFunction func) : base(func) { }

		public void Call(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate TestEventListener_OnClick(LuaFunction func)
	{
		if (func == null)
		{
			TestEventListener.OnClick fn = delegate { };
			return fn;
		}

		TestEventListener.OnClick d = (new TestEventListener_OnClick_Event(func)).Call;
		return d;
	}

	class TestEventListener_VoidDelegate_Event : LuaDelegate
	{
		public TestEventListener_VoidDelegate_Event(LuaFunction func) : base(func) { }

		public void Call(UnityEngine.GameObject param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate TestEventListener_VoidDelegate(LuaFunction func)
	{
		if (func == null)
		{
			TestEventListener.VoidDelegate fn = delegate { };
			return fn;
		}

		TestEventListener.VoidDelegate d = (new TestEventListener_VoidDelegate_Event(func)).Call;
		return d;
	}

	class System_Action_Actor_Event : LuaDelegate
	{
		public System_Action_Actor_Event(LuaFunction func) : base(func) { }

		public void Call(Actor param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action_Actor(LuaFunction func)
	{
		if (func == null)
		{
			System.Action<Actor> fn = delegate { };
			return fn;
		}

		System.Action<Actor> d = (new System_Action_Actor_Event(func)).Call;
		return d;
	}

	class TimerController_TimerHandler_Event : LuaDelegate
	{
		public TimerController_TimerHandler_Event(LuaFunction func) : base(func) { }

		public void Call()
		{
			func.Call();
		}
	}

	public static Delegate TimerController_TimerHandler(LuaFunction func)
	{
		if (func == null)
		{
			TimerController.TimerHandler fn = delegate { };
			return fn;
		}

		TimerController.TimerHandler d = (new TimerController_TimerHandler_Event(func)).Call;
		return d;
	}

	class System_Action_Skill_Event : LuaDelegate
	{
		public System_Action_Skill_Event(LuaFunction func) : base(func) { }

		public void Call(Skill param0)
		{
			func.BeginPCall();
			func.PushObject(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action_Skill(LuaFunction func)
	{
		if (func == null)
		{
			System.Action<Skill> fn = delegate { };
			return fn;
		}

		System.Action<Skill> d = (new System_Action_Skill_Event(func)).Call;
		return d;
	}

	class System_Action_Projectile_Event : LuaDelegate
	{
		public System_Action_Projectile_Event(LuaFunction func) : base(func) { }

		public void Call(Projectile param0)
		{
			func.BeginPCall();
			func.Push(param0);
			func.PCall();
			func.EndPCall();
		}
	}

	public static Delegate System_Action_Projectile(LuaFunction func)
	{
		if (func == null)
		{
			System.Action<Projectile> fn = delegate { };
			return fn;
		}

		System.Action<Projectile> d = (new System_Action_Projectile_Event(func)).Call;
		return d;
	}

}

